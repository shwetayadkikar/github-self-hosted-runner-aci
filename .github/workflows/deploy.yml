name: 'Deploy ACR and ACI to create self-hosted GitHub Runners'
on:
  workflow_call:
    inputs:
      environment:
        default: DEV
        required: true
        type: string      
  workflow_dispatch:
    inputs:
      environment:
        default: DEV
        type: choice
        options:
          - DEV
          - TST
          - PROD
permissions:
    id-token: write
    contents: read 
jobs:
  deploy-acr-vnet:
    name: Deploy ACR and Virtual Network
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
 
    steps:
      - uses: actions/checkout@v2

      - name: GitHub App Token Generation
        id: my-app
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: ${{secrets.GH_APP_ID}}
          private_key: ${{ secrets.GH_APP_KEY }}
 
          
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.SPN_APP_ID }}
          tenant-id: ${{ secrets.TENANTID }}
          subscription-id: ${{ secrets.SUBSCRIPTIONID }}        
          enable-AzPSSession: true

      - name : Deploy ACR and Virtual Network
        uses: azure/CLI@v1
        id: deploy-acr
        env:
          location: 'NorthEurope'
        with:              
          azcliversion: 2.30.0
          inlineScript: |
            az account show
            az group create --name acirunnerdemorg --location northeurope
            az acr create --resource-group acirunnerdemorg --name acirunnerdemoreg.azurecr.io --sku Basic
            
            az network vnet create \
            --name aci-vnet-1 \
            --resource-group acirunnerdemorg \
            --address-prefix 10.0.0.0/16 \
            --subnet-name aci-subnet-1 \
            --subnet-prefixes 10.0.0.0/24

  build-docker-image-upload:
    name: Build docker image and upload
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [deploy-acr-vnet]
 
    steps:
      - uses: actions/checkout@v2

      - name: GitHub App Token Generation
        id: my-app
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: ${{secrets.GH_APP_ID}}
          private_key: ${{ secrets.GH_APP_KEY }}
 
          
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.SPN_APP_ID }}
          tenant-id: ${{ secrets.TENANTID }}
          subscription-id: ${{ secrets.SUBSCRIPTIONID }}        
          enable-AzPSSession: true

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: acirunnerdemoreg.azurecr.io
          username: ${{ secrets.SPN_APP_ID }}
          password:  ${{ secrets.SPN_SECRET }}

      - name: Build and Upload Docker Image
        id: build_and_upload_docker_image        
        run: |          
          docker build ${{ github.workspace }}/GitHubRunner -t acirunnerdemoreg.azurecr.io/githubrunner:${{ github.run_id }}
          docker push acirunnerdemoreg.azurecr.io/githubrunner:${{ github.run_id }}     

  deploy-aci:
    name: Deploy ACI
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [build-docker-image-upload]
 
    steps:
      - uses: actions/checkout@v2

      - name: GitHub App Token Generation
        id: my-app
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: ${{secrets.GH_APP_ID}}
          private_key: ${{ secrets.GH_APP_KEY }}
 
          
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.SPN_APP_ID }}
          tenant-id: ${{ secrets.TENANTID }}
          subscription-id: ${{ secrets.SUBSCRIPTIONID }}        
          enable-AzPSSession: true          
      
      - name: Create Azure Container Instaces
        uses: azure/CLI@v1
        id: create_aci
        # env:
        #   clientSecret: ${{ secrets.CLIENT_SECRET }}
        with:
          inlineScript: |
            
            az container create \
            --name github-runner-demo \
            --resource-group acirunnerdemorg \
            --image acirunnerdemoreg.azurecr.io/githubrunner:${{ github.run_id }} \
            --registry-login-server acirunnerdemoreg.azurecr.io \
            --registry-username ${{ secrets.SPN_APP_ID }} \
            --registry-password ${{ secrets.SPN_SECRET }} \
            --dns-name-label github-runner-demo-$RANDOM \
            --query ipAddress.fqdn \
            --subnet aci-subnet-1 \
            --subnet-address-prefix 10.0.0.0/24 \
            --vnet aci-vnet-1 \
            --vnet-address-prefix 10.0.0.0/16 \
            --environment-variables 'GH_APP_ID'='${{ secrets.GH_APP_ID }}' 'GH_PRIVATE_KEY'='${{ secrets.GH_APP_ID }}' 'GH_APP_INSTALLATION_ID'='42193455' 'RUNNER_ORGANIZATION_URL'='https://github.com/shwetayadkikar' 'RUNNER_NAME'='github-runner-demo-$RANDOM'